{"version":3,"file":"forum.js","mappings":"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","sources":["webpack://@custom/discussions-item/webpack/bootstrap","webpack://@custom/discussions-item/webpack/runtime/compat get default export","webpack://@custom/discussions-item/webpack/runtime/define property getters","webpack://@custom/discussions-item/webpack/runtime/hasOwnProperty shorthand","webpack://@custom/discussions-item/external root \"flarum.core.compat['forum/app']\"","webpack://@custom/discussions-item/external root \"flarum.core.compat['common/extend']\"","webpack://@custom/discussions-item/external root \"flarum.core.compat['forum/components/DiscussionListItem']\"","webpack://@custom/discussions-item/external root \"flarum.core.compat['common/models/Discussion']\"","webpack://@custom/discussions-item/external root \"flarum.core.compat['common/helpers/avatar']\"","webpack://@custom/discussions-item/external root \"flarum.core.compat['common/helpers/icon']\"","webpack://@custom/discussions-item/external root \"flarum.core.compat['common/utils/abbreviateNumber']\"","webpack://@custom/discussions-item/./src/forum/index.js"],"sourcesContent":["// The require scope\nvar __webpack_require__ = {};\n\n","// getDefaultExport function for compatibility with non-harmony modules\n__webpack_require__.n = (module) => {\n\tvar getter = module && module.__esModule ?\n\t\t() => (module['default']) :\n\t\t() => (module);\n\t__webpack_require__.d(getter, { a: getter });\n\treturn getter;\n};","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","const __WEBPACK_NAMESPACE_OBJECT__ = flarum.core.compat['forum/app'];","const __WEBPACK_NAMESPACE_OBJECT__ = flarum.core.compat['common/extend'];","const __WEBPACK_NAMESPACE_OBJECT__ = flarum.core.compat['forum/components/DiscussionListItem'];","const __WEBPACK_NAMESPACE_OBJECT__ = flarum.core.compat['common/models/Discussion'];","const __WEBPACK_NAMESPACE_OBJECT__ = flarum.core.compat['common/helpers/avatar'];","const __WEBPACK_NAMESPACE_OBJECT__ = flarum.core.compat['common/helpers/icon'];","const __WEBPACK_NAMESPACE_OBJECT__ = flarum.core.compat['common/utils/abbreviateNumber'];","import app from 'flarum/forum/app';\nimport { extend } from 'flarum/common/extend';\nimport DiscussionListItem from 'flarum/forum/components/DiscussionListItem';\nimport Discussion from 'flarum/common/models/Discussion';\nimport avatar from 'flarum/common/helpers/avatar';\nimport icon from 'flarum/common/helpers/icon';\nimport abbreviateNumber from 'flarum/common/utils/abbreviateNumber';\n\napp.initializers.add('custom/discussions-item', () => {\n  console.log('custom/discussions-item');\n  \n  // 扩展DiscussionListItem组件，添加用户头像、Likes和回帖用户头像列表\n  extend(DiscussionListItem.prototype, 'contentItems', function (items) {\n    // 在DiscussionListItem的最下边添加增强信息容器\n    items.add('enhancedInfo', this.enhancedInfoView(), 5);\n    console.log('items', items);\n    console.log('this.attrs.discussion', this.attrs);\n  });\n\n  // 扩展item-terminalPost，在内部添加作者头像\n  extend(DiscussionListItem.prototype, 'infoItems', function (items) {\n    // 在item-terminalPost内部添加作者头像\n    console.log('items', items);\n    items.add('authorAvatar', this.authorAvatarView(), 1);\n  });\n\n  // 添加作者头像显示方法\n  DiscussionListItem.prototype.authorAvatarView = function () {\n    const discussion = this.attrs.discussion;\n    \n    // 读取后台配置\n    const enableAuthorAvatar = app.forum.attribute('custom-discussions-item.enable_author_avatar') !== false;\n    const avatarSize = parseInt(app.forum.attribute('custom-discussions-item.avatar_size')) || 24;\n    \n    // 如果禁用了，不显示\n    if (!enableAuthorAvatar) {\n      return null;\n    }\n    \n    const author = discussion.user ? discussion.user() : null;\n    \n    // 如果没有作者信息，不显示\n    if (!author) {\n      return null;\n    }\n    \n    return (\n      <div className=\"DiscussionListItem-author-avatar\">\n        {avatar(author, { size: avatarSize })}\n      </div>\n    );\n  };\n\n  // 添加增强信息容器方法（包含likes和reply avatars）\n  DiscussionListItem.prototype.enhancedInfoView = function () {\n    const discussion = this.attrs.discussion;\n    \n    // 读取后台配置\n    const enableLikesCount = app.forum.attribute('custom-discussions-item.enable_likes_count') !== false;\n    const enableReplyAvatars = app.forum.attribute('custom-discussions-item.enable_reply_avatars') !== false;\n    \n    // 如果都禁用了，不显示\n    if (!enableLikesCount && !enableReplyAvatars) {\n      return null;\n    }\n    \n    return (\n      <div className=\"DiscussionListItem-enhanced\">\n        {/* 左侧：点赞数 */}\n        <div className=\"DiscussionListItem-likes\">\n          {this.likesInfoView()}\n        </div>\n        \n        {/* 右侧：回帖用户头像 */}\n        <div className=\"DiscussionListItem-reply-avatars\">\n          {this.replyAvatarsView()}\n        </div>\n      </div>\n    );\n  };\n\n  // 添加Likes信息显示方法\n  DiscussionListItem.prototype.likesInfoView = function () {\n    const discussion = this.attrs.discussion;\n    \n    // 读取后台配置\n    const enableLikesCount = app.forum.attribute('custom-discussions-item.enable_likes_count') !== false;\n    \n    // 如果禁用了，不显示\n    if (!enableLikesCount) {\n      return null;\n    }\n    \n    // 直接从API响应中获取likesCount\n    const likesCount = discussion.data.attributes.likesCount || 0;\n    \n    return (\n      <span className=\"likes-count\">\n        {icon('fas fa-heart')}\n        <span className=\"count\">\n          {app.translator.trans('custom-discussions-item.forum.likes_count', { count: abbreviateNumber(likesCount) })}\n        </span>\n      </span>\n    );\n  };\n\n  // 添加回帖用户头像列表显示方法\n  DiscussionListItem.prototype.replyAvatarsView = function () {\n    const discussion = this.attrs.discussion;\n    \n    // 读取后台配置\n    const enableReplyAvatars = app.forum.attribute('custom-discussions-item.enable_reply_avatars') !== false;\n    const maxAvatars = parseInt(app.forum.attribute('custom-discussions-item.max_reply_avatars')) || 5;\n    const avatarSize = parseInt(app.forum.attribute('custom-discussions-item.avatar_size')) || 20;\n    \n    console.log('回帖头像配置读取:', {\n      enableReplyAvatars,\n      maxAvatars,\n      avatarSize\n    });\n    \n    // 如果禁用了，不显示\n    if (!enableReplyAvatars) {\n      return null;\n    }\n    \n    // 直接从API响应中获取回复用户信息\n    const replyUsers = discussion.data.attributes.replyUsers || [];\n    \n    // 如果没有回帖用户，不显示\n    if (replyUsers.length === 0) {\n      return null;\n    }\n\n    console.log('显示回帖用户头像，数量:', replyUsers.length);\n\n    // 限制显示的头像数量\n    const displayUsers = replyUsers.slice(0, maxAvatars);\n\n    return (\n      <>\n        <span className=\"reply-avatars-label\">\n          {app.translator.trans('custom-discussions-item.forum.recent_replies')}:\n        </span>\n        <div className=\"avatars-list\">\n          {displayUsers.map((user, index) => {\n            // 创建用户对象以使用Flarum的avatar辅助函数\n            const userModel = {\n              id: () => user.id,\n              displayName: () => user.displayName,\n              username: () => user.username,\n              avatarUrl: () => user.avatarUrl,\n            };\n            \n            return (\n              <span key={index} className=\"reply-avatar\" title={user.displayName}>\n                {avatar(userModel, { size: avatarSize })}\n              </span>\n            );\n          })}\n          {replyUsers.length > maxAvatars && (\n            <span className=\"more-avatars\" title={app.translator.trans('custom-discussions-item.forum.more_replies', { count: replyUsers.length - maxAvatars })}>\n              {app.translator.trans('custom-discussions-item.forum.more_replies', { count: replyUsers.length - maxAvatars })}\n            </span>\n          )}\n        </div>\n      </>\n    );\n  };\n});"],"names":["__webpack_require__","module","getter","__esModule","d","a","exports","definition","key","o","Object","defineProperty","enumerable","get","obj","prop","prototype","hasOwnProperty","call","flarum","core","compat","app","add","console","log","extend","DiscussionListItem","items","this","enhancedInfoView","attrs","authorAvatarView","discussion","enableAuthorAvatar","attribute","avatarSize","parseInt","author","user","m","className","avatar","size","enableLikesCount","enableReplyAvatars","likesInfoView","replyAvatarsView","likesCount","data","attributes","icon","trans","count","abbreviateNumber","maxAvatars","replyUsers","length","displayUsers","slice","'['","map","index","userModel","id","displayName","username","avatarUrl","title"],"sourceRoot":""}